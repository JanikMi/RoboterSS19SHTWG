<!-- 
  Turtlebot navigation simulation:
  - stage
 -->
<launch>
  <arg name="base"       default="$(optenv TURTLEBOT_BASE kobuki)"/>  <!-- create, rhoomba -->
  <arg name="stacks"     default="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor"  default="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->

  <!-- Name of the map to use (without path nor extension) and initial position -->
  <!--
  <arg name="world_file"     default=" $(env TURTLEBOT_STAGE_WORLD_FILE)"/>
  -->
  <arg name="world_file"     default="-d $(find turtlebot_highlevel_controller)/launch/piller.world"/>


  <param name="/use_sim_time" value="true"/>
  <!--  ******************** Stage ********************  -->
  <!-- 
        Publishes transforms:
          /base_link -> /base_laser
          /base_footprint -> /base_link (identity)
          /odom -> base_footprint
        Publishes topics:
          /odom : odometry data from the simulated odometry
          /base_scan : laser data from the simulated laser
          /base_pose_ground_truth : the ground truth pose
        Parameters:
          base_watchdog_timeout : time (s) after receiving the last command on cmd_vel before stopping the robot
        Args:
          -g : run in headless mode.
  --> 
  <node pkg="stage_ros" type="stageros" name="stageros" args="$(arg world_file)">
    <param name="base_watchdog_timeout" value="0.5"/>
    <remap from="odom" to="odom"/>
    <remap from="base_pose_ground_truth" to="base_pose_ground_truth"/>
    <remap from="turtlebot_highlevel_controller_node/cmd_vel_pub_" to="cmd_vel_mux/input/teleop"/>
    <remap from="base_scan" to="scan"/>
  </node>

  <!--  ***************** Robot Model *****************  -->
  <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
  </include>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
  </node>

  
  <!--  ***************** Start Teleop Twist Keyboard *****************  -->
  <!-- -->
  <!--<node name="teleop_twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen">
  </node>
  -->
  
  <!--  ***************** Parameter aus yaml file auf parameter server laden *****************  -->
  <rosparam command="load" file="$(find turtlebot_highlevel_controller)/config/parameter.yaml" />
  <rosparam command="load" file="$(find turtlebot_highlevel_controller)/config/piller.yaml" />

<!--  ***************** eigene node starten *****************  -->
  <node pkg="turtlebot_highlevel_controller" type="turtlebot_highlevel_controller" name="turtlebot_highlevel_controller_node" output="screen"> 
  </node>
<!---->

<!-- rviz -->
<node type="rviz" name="rviz" pkg="rviz" 
args="-d $(find turtlebot_highlevel_controller)/config/rviz_config.rviz">  
</node>

<!--<node type="rviz" name="rviz" pkg="rviz" args="-d $(find turtlebot_highlevel_controller)/config/rviz_config.rviz>  </node>-->
</launch>